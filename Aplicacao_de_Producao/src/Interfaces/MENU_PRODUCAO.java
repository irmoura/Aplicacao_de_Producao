/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.text.*;

/**
 *
 * @author Ismael Ribeiro
 */
public class MENU_PRODUCAO extends javax.swing.JInternalFrame {
    /**
     * Creates new form 
     */
    public MENU_PRODUCAO() {
        DATA data = new DATA();
        initComponents();
        //TEXTO_EM.setDocument(new LIMITE_DE_DIGITOS_EM(4));//Limite de um EM ex: 2228//---------------
        //TEXTO_TOTAL_OL.setDocument(new LIMITE_DE_DIGITOS_EM(3));//COM ESSA LINHA DEU ERRO NA CONTAGEM ... :/
        //TEXTO_OL_DO_DIA.setDocument(new LIMITE_DE_DIGITOS_EM(3));//-----------------
        
        BOTAO_SALVAR.setToolTipText("Salvar");//MOSTRA UM TEXTO AO PASSAR MOUSE EM CIMA
        BOTAO_SAIR.setToolTipText("Sair");
        BOTAO_ATUAL.setToolTipText("Atual");
        BOTAO_OL_DO_DIA.setToolTipText("OL");
        BOTAO_PADRAO.setToolTipText("Padrão");
        BOTAO_LIMPAR.setToolTipText("Limpar");
        BOTAO_RESULTADO.setToolTipText("Resultado");
        DIABASE_.setText("DIA BASE "+data.DIA_BASE+"/ "+data.MES_VALIDO_ABREVIADO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        TEXTO_TOTAL_OL = new javax.swing.JTextField();
        BOTAO_RESULTADO = new javax.swing.JButton();
        TEXTO_PROJETADO = new javax.swing.JTextField();
        TOTALDEOL = new javax.swing.JLabel();
        PROJETADO_ = new javax.swing.JLabel();
        EM_ = new javax.swing.JLabel();
        TEXTO_NOME = new javax.swing.JTextField();
        TEXTO_FALTA = new javax.swing.JTextField();
        FALTA_ = new javax.swing.JLabel();
        PREVISTO_ = new javax.swing.JLabel();
        TEXTO_PREVISTO = new javax.swing.JTextField();
        DIFERENCAGERAL = new javax.swing.JLabel();
        TEXTO_DIFERENCA_GERAL = new javax.swing.JTextField();
        DIASUTEIS = new javax.swing.JLabel();
        TEXTO_DIAS_UTEIS = new javax.swing.JTextField();
        DIABASE_ = new javax.swing.JLabel();
        TEXTO_DIA_BASE = new javax.swing.JTextField();
        NOME_ = new javax.swing.JLabel();
        TEXTO_EM = new javax.swing.JTextField();
        BOTAO_SAIR = new javax.swing.JButton();
        TEXTO_SETOR = new javax.swing.JTextField();
        SETOR_ = new javax.swing.JLabel();
        TEXTO_DIAS_UTEIS_RESTANTES = new javax.swing.JTextField();
        DIASUTEIS1 = new javax.swing.JLabel();
        OPCAO_PRODUCAO_ATUAL = new javax.swing.JCheckBox();
        BOTAO_SALVAR = new javax.swing.JButton();
        BOTAO_ATUAL = new javax.swing.JButton();
        OLDODIA = new javax.swing.JLabel();
        TEXTO_OL_DO_DIA = new javax.swing.JTextField();
        TEXTO_DIFERENCA_DIARIA = new javax.swing.JTextField();
        TOTALDEOL2 = new javax.swing.JLabel();
        BOTAO_OL_DO_DIA = new javax.swing.JButton();
        BOTAO_LIMPAR = new javax.swing.JButton();
        MEDIA_DIARIA_ = new javax.swing.JLabel();
        TEXTO_MEDIA_DIARIA = new javax.swing.JTextField();
        BOTAO_PADRAO = new javax.swing.JButton();
        COMBO_DIA = new javax.swing.JComboBox();
        OPCAO_DEFINIR_DIA = new javax.swing.JCheckBox();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setClosable(true);
        setIconifiable(true);
        setTitle("Relatório de Acompanhamento de Metas Diário - Dezembro 2015");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icone-calculadora.gif"))); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TEXTO_TOTAL_OL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_TOTAL_OLActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_TOTAL_OL, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 269, -1));

        BOTAO_RESULTADO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icon-resultado.gif"))); // NOI18N
        BOTAO_RESULTADO.setBorder(null);
        BOTAO_RESULTADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_RESULTADOActionPerformed(evt);
            }
        });
        BOTAO_RESULTADO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BOTAO_RESULTADOKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BOTAO_RESULTADOKeyTyped(evt);
            }
        });
        getContentPane().add(BOTAO_RESULTADO, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, -1, -1));

        TEXTO_PROJETADO.setEditable(false);
        TEXTO_PROJETADO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_PROJETADOActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_PROJETADO, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 269, -1));

        TOTALDEOL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TOTALDEOL.setText("TOTAL DE OL");
        getContentPane().add(TOTALDEOL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, 20));

        PROJETADO_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PROJETADO_.setText("PROJETADO");
        getContentPane().add(PROJETADO_, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, -1, 20));

        EM_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        EM_.setText("EM:");
        getContentPane().add(EM_, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 27, 20));

        TEXTO_NOME.setEditable(false);
        TEXTO_NOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_NOMEActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_NOME, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 269, -1));

        TEXTO_FALTA.setEditable(false);
        TEXTO_FALTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_FALTAActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_FALTA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 269, -1));

        FALTA_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        FALTA_.setText("FALTA");
        getContentPane().add(FALTA_, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, 20));

        PREVISTO_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PREVISTO_.setText("PREVISTO");
        getContentPane().add(PREVISTO_, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, 20));

        TEXTO_PREVISTO.setEditable(false);
        TEXTO_PREVISTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_PREVISTOActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_PREVISTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 269, -1));

        DIFERENCAGERAL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DIFERENCAGERAL.setText("DIFERENÇA GERAL");
        getContentPane().add(DIFERENCAGERAL, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, 20));

        TEXTO_DIFERENCA_GERAL.setEditable(false);
        TEXTO_DIFERENCA_GERAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_DIFERENCA_GERALActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_DIFERENCA_GERAL, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 269, -1));

        DIASUTEIS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DIASUTEIS.setText("DIAS ÚTEIS");
        getContentPane().add(DIASUTEIS, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, -1, 20));

        TEXTO_DIAS_UTEIS.setEditable(false);
        TEXTO_DIAS_UTEIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_DIAS_UTEISActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_DIAS_UTEIS, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 269, -1));

        DIABASE_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DIABASE_.setText("DIA BASE 07/ DEZ");
        getContentPane().add(DIABASE_, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, 20));

        TEXTO_DIA_BASE.setEditable(false);
        TEXTO_DIA_BASE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_DIA_BASEActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_DIA_BASE, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 269, -1));

        NOME_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        NOME_.setText("NOME");
        getContentPane().add(NOME_, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, 20));

        TEXTO_EM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_EMActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_EM, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 269, -1));

        BOTAO_SAIR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icone_sair.png"))); // NOI18N
        BOTAO_SAIR.setBorder(null);
        BOTAO_SAIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_SAIRActionPerformed(evt);
            }
        });
        getContentPane().add(BOTAO_SAIR, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, -1, -1));

        TEXTO_SETOR.setEditable(false);
        TEXTO_SETOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_SETORActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_SETOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 269, -1));

        SETOR_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SETOR_.setText("SETOR");
        getContentPane().add(SETOR_, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, 20));

        TEXTO_DIAS_UTEIS_RESTANTES.setEditable(false);
        TEXTO_DIAS_UTEIS_RESTANTES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_DIAS_UTEIS_RESTANTESActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_DIAS_UTEIS_RESTANTES, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 269, -1));

        DIASUTEIS1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DIASUTEIS1.setText("DIAS ÚTEIS RESTANTES");
        getContentPane().add(DIASUTEIS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, 20));

        OPCAO_PRODUCAO_ATUAL.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        OPCAO_PRODUCAO_ATUAL.setText("PRODUÇÃO ATUAL");
        OPCAO_PRODUCAO_ATUAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPCAO_PRODUCAO_ATUALActionPerformed(evt);
            }
        });
        getContentPane().add(OPCAO_PRODUCAO_ATUAL, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 230, -1, -1));

        BOTAO_SALVAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/disquete.jpg"))); // NOI18N
        BOTAO_SALVAR.setBorder(null);
        BOTAO_SALVAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_SALVARActionPerformed(evt);
            }
        });
        getContentPane().add(BOTAO_SALVAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, -1, -1));

        BOTAO_ATUAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icone_estrela.png"))); // NOI18N
        BOTAO_ATUAL.setBorder(null);
        BOTAO_ATUAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_ATUALActionPerformed(evt);
            }
        });
        getContentPane().add(BOTAO_ATUAL, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, -1, -1));

        OLDODIA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        OLDODIA.setText("OL DO DIA");
        getContentPane().add(OLDODIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, -1, 20));
        getContentPane().add(TEXTO_OL_DO_DIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 269, -1));

        TEXTO_DIFERENCA_DIARIA.setEditable(false);
        getContentPane().add(TEXTO_DIFERENCA_DIARIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 269, -1));

        TOTALDEOL2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TOTALDEOL2.setText("DIFERENÇA DIÁRIA");
        getContentPane().add(TOTALDEOL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, 20));

        BOTAO_OL_DO_DIA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icon_trofeu.gif"))); // NOI18N
        BOTAO_OL_DO_DIA.setBorder(null);
        BOTAO_OL_DO_DIA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_OL_DO_DIAActionPerformed(evt);
            }
        });
        getContentPane().add(BOTAO_OL_DO_DIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, -1, -1));

        BOTAO_LIMPAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icon-borracha.jpg"))); // NOI18N
        BOTAO_LIMPAR.setBorder(null);
        BOTAO_LIMPAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_LIMPARActionPerformed(evt);
            }
        });
        getContentPane().add(BOTAO_LIMPAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, -1, -1));

        MEDIA_DIARIA_.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        MEDIA_DIARIA_.setText("MÉDIA DIÁRIA");
        getContentPane().add(MEDIA_DIARIA_, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, -1, 20));

        TEXTO_MEDIA_DIARIA.setEditable(false);
        TEXTO_MEDIA_DIARIA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TEXTO_MEDIA_DIARIAActionPerformed(evt);
            }
        });
        getContentPane().add(TEXTO_MEDIA_DIARIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 269, -1));

        BOTAO_PADRAO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icon-padrao.png"))); // NOI18N
        BOTAO_PADRAO.setBorder(null);
        BOTAO_PADRAO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_PADRAOActionPerformed(evt);
            }
        });
        getContentPane().add(BOTAO_PADRAO, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, -1, -1));

        COMBO_DIA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        COMBO_DIA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(COMBO_DIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, -1, -1));

        OPCAO_DEFINIR_DIA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        OPCAO_DEFINIR_DIA.setText("DEFINIR DIA     ");
        OPCAO_DEFINIR_DIA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPCAO_DEFINIR_DIAActionPerformed(evt);
            }
        });
        getContentPane().add(OPCAO_DEFINIR_DIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 260, -1, -1));

        setBounds(0, 0, 613, 499);
    }// </editor-fold>//GEN-END:initComponents

    private void TEXTO_TOTAL_OLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_TOTAL_OLActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TEXTO_TOTAL_OLActionPerformed

    private void TEXTO_PROJETADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_PROJETADOActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TEXTO_PROJETADOActionPerformed

    private void BOTAO_RESULTADOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_RESULTADOActionPerformed
        // TODO add your handling code here:
        
        for (int i = 0; i < 2; i ++)
            
        {    
        
        BOTAO_SALVAR.setEnabled(true);//COM A OPCAO "ATUAL" DESMARCADA O BOTAO SALVAR FICA VISIVEL !
        FALTA_.setText("FALTA");
        TEXTO_FALTA.setBackground(Color.WHITE);
        
        
        String TOTAL_DE_OL_DO_BANCO_DE_DADOS = "";
        String PROJETADO_DO_BANCO_DE_DADOS = "";
        String TECNICO_DO_BANCO_DE_DADOS = "";
        
        ELETRONICA eletronica = new ELETRONICA();
        NOTEBOOK notebook = new NOTEBOOK();
        GARANTIA garantia = new GARANTIA();
        DESKTOP desktop = new DESKTOP();
        RECARGA recarga = new RECARGA();
        IMPRESSORAS impressoras = new IMPRESSORAS();
        TABLET tablet = new TABLET();
        LAUDO laudo = new LAUDO();
        RECEPCAO recepcao = new RECEPCAO();
        
        eletronica.Meta();//CHAMA O MÉTODO QUE DEFINE A QUANTIDADE QUE DEVE SER FEITA DIARIAMENTE DE ACORDO COM O VALOR DO ARQUIVO LIDO
        notebook.Meta();
        garantia.Meta();
        desktop.Meta();
        recarga.Meta();
        impressoras.Meta();
        tablet.Meta();
        laudo.Meta();
        recepcao.Meta();
        
        DATA data = new DATA();
        data.Dia_Atual(data.dia);//METODO DA DATA
        
        INDICADOR indicador = new INDICADOR();
        
        TECNICO ismael = new TECNICO();
        TECNICO glauber = new TECNICO();
        TECNICO paulo = new TECNICO();
        TECNICO bruno = new TECNICO();
        TECNICO julio = new TECNICO();
        TECNICO jociano = new TECNICO();
        TECNICO pedro = new TECNICO();
        TECNICO antonio = new TECNICO();
        TECNICO benedito = new TECNICO();
        TECNICO emmanuel = new TECNICO();
        TECNICO polibio = new TECNICO();
        TECNICO robson = new TECNICO();
        TECNICO lucas = new TECNICO();
        TECNICO alexsandro = new TECNICO();
        TECNICO rodrigo = new TECNICO();
        TECNICO edilberto = new TECNICO();
        TECNICO alexviana = new TECNICO();
        TECNICO henriqueestevao = new TECNICO();
        TECNICO joseairton = new TECNICO();
        TECNICO jeffersonratts = new TECNICO();
        TECNICO robertobarbosa = new TECNICO();
        TECNICO gilmarleysantos = new TECNICO();
        TECNICO alandouglas = new TECNICO();
        TECNICO williamsvictor = new TECNICO();
        TECNICO weslleyalves = new TECNICO();
        TECNICO francideniocarlos = new TECNICO();
        TECNICO randbrito = new TECNICO();
        TECNICO clovissantos = new TECNICO();
        TECNICO joselima = new TECNICO();
        TECNICO tecnico = new TECNICO();
        
        ATENDENTE carol = new ATENDENTE();
        
        File DIRETORIO = new File("C:\\PRODUCAO");
        
        File ARQUIVO_TECNICO = new File(DIRETORIO, "TECNICO.txt");

        FileReader fileReader = null;
            
        try {
            fileReader = new FileReader(ARQUIVO_TECNICO);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
            BufferedReader arq = new BufferedReader(fileReader);
            
        try {
             
            TEXTO_EM.setText(arq.readLine());//PRIMEIRA LINHA DO ARQUIVO
            TEXTO_TOTAL_OL.setText(arq.readLine());//SEGUNDA LINHA DO ARQUIVO
            
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }      
        
        
        if ((OPCAO_DEFINIR_DIA.isSelected()) && (OPCAO_PRODUCAO_ATUAL.isSelected()))
        {
            for(i=0; i<1;i++)
            {
                JOptionPane.showMessageDialog(null,"Você não pode selecionar as duas opções simultaneamente ...","Aviso",JOptionPane.WARNING_MESSAGE); 
            }
        }
        
        if (OPCAO_DEFINIR_DIA.isSelected())
        {
            COMBO_DIA.setEnabled(true);
            
            String DATA_DIA;
            
            int DIA = 0;
            
            DATA_DIA = (String) COMBO_DIA.getSelectedItem();
            
            DIA = Integer.parseInt(DATA_DIA);
            
            data.Dia_Atual(DIA);//METODO DA DATA
        }
        
        if (!OPCAO_DEFINIR_DIA.isSelected())
        {
            COMBO_DIA.setEnabled(false);
        }
        
        if (OPCAO_PRODUCAO_ATUAL.isSelected())
                    
                {
                  
                    if ((data.dia_do_ano == 106) && (data.dia_da_semana == 6))/*15/04/2016*/
                    {
                    data.dias_uteis = 12;
                    }
                    else
                    if ((data.dia_do_ano == 107) && (data.dia_da_semana == 7))/*16/04/2016*/
                    {
                    data.dias_uteis = 12.5;
                    }
                  
                  String TOTAL_OL_DIA_STRING = TEXTO_OL_DO_DIA.getText();
                  Double OL_DIA = Double.parseDouble(TOTAL_OL_DIA_STRING);
                  
                  //////////////////////////////////////////////////////////////
                 
                try{
                BufferedReader arquivo = new BufferedReader(new FileReader("C:\\PRODUCAO\\TECNICO.txt"));
                
                TOTAL_DE_OL_DO_BANCO_DE_DADOS = arquivo.readLine();
                TOTAL_DE_OL_DO_BANCO_DE_DADOS = arquivo.readLine();
                PROJETADO_DO_BANCO_DE_DADOS = arquivo.readLine();
               
                arquivo.close();
                }catch(Exception erro)
                {
                    JOptionPane.showMessageDialog(null,"Erro:"+erro.getMessage());
                }
            
                  //////////////////////////////////////////////////////////////
                  
                  Double TOTAL_OOL = Double.parseDouble( TOTAL_DE_OL_DO_BANCO_DE_DADOS);
                  
                  TOTAL_OOL = TOTAL_OOL+OL_DIA;
                  
                  TEXTO_TOTAL_OL.setText(""+TOTAL_OOL);
                  
                  String PROJETADO_ATUAL = TEXTO_PROJETADO.getText();
                  Double VALOR_PROJETADO_ATUAL = Double.parseDouble(PROJETADO_ATUAL);
                  
                  Double TOTAL_PROJETADO = Double.parseDouble( PROJETADO_DO_BANCO_DE_DADOS);//TOTAL GRAVADO NO ARQUIVO ...
                  
                  TEXTO_DIFERENCA_DIARIA.setText(""+(TOTAL_PROJETADO - VALOR_PROJETADO_ATUAL));
                  
                  TEXTO_FALTA.setText(""+ismael.Metodo_Falta()+"     ou     "+Math.round(indicador.porcentagem_falta)+"%");//*****NEW*****
                  
                  BOTAO_SALVAR.setEnabled(false);  
                     
                }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////                
        ismael.em = 2228;
        String em_ismael = Integer.toString(ismael.em);
        ismael.nome = "ISMAEL MOURA";
        ismael.setor = "ELETRÔNICA";
        ismael.porcentagem_dia_base = 67;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        glauber.em = 2378;
        String em_glauber = Integer.toString(glauber.em);
        glauber.nome = "FRANCISCO GLAUBER";
        glauber.setor = "ELETRÔNICA";
        glauber.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        paulo.em = 1152;
        String em_paulo = Integer.toString(paulo.em);
        paulo.nome = "PAULO HENRIQUE";
        paulo.setor = "ELETRÔNICA";
        paulo.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        bruno.em = 2940;
        String em_bruno = Integer.toString(bruno.em);
        bruno.nome = "BRUNO FREITAS";
        bruno.setor = "NOTEBOOK";
        bruno.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        julio.em = 1854;
        String em_julio = Integer.toString(julio.em);
        julio.nome = "JULIO FREITAS";
        julio.setor = "IMPRESSORAS";
        julio.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        jociano.em = 983;
        String em_jociano = Integer.toString(jociano.em);
        jociano.nome = "JOCIANO DIAS";
        jociano.setor = "RECARGA";
        jociano.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        antonio.em = 2732;
        String em_antonio = Integer.toString(antonio.em);
        antonio.nome = "ANTONIO PAZ";
        antonio.setor = "TABLETS";
        antonio.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        benedito.em = 2127;
        String em_benedito = Integer.toString(benedito.em);
        benedito.nome = "BENEDITO GOMES";
        benedito.setor = "NOTEBOOK";
        benedito.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        emmanuel.em = 680;
        String em_emmanuel = Integer.toString(emmanuel.em);
        emmanuel.nome = "JOSE EMMANUEL";
        emmanuel.setor = "GARANTIA";
        emmanuel.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        polibio.em = 1915;
        String em_polibio = Integer.toString(polibio.em);
        polibio.nome = "POLIBIO LIMA";
        polibio.setor = "LAUDO";
        polibio.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        robson.em = 2283;
        String em_robson = Integer.toString(robson.em);
        robson.nome = "ROBSON NIELL";
        robson.setor = "DESK";
        robson.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        lucas.em = 2742;
        String em_lucas = Integer.toString(lucas.em);
        lucas.nome = "LUCAS ALVES";
        lucas.setor = "DESK";
        lucas.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        alexsandro.em = 2964;
        String em_alexsandro = Integer.toString(alexsandro.em);
        alexsandro.nome = "ALEXSANDRO SOUSA";
        alexsandro.setor = "DESK";
        alexsandro.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        rodrigo.em = 2942;
        String em_rodrigo = Integer.toString(rodrigo.em);
        rodrigo.nome = "RODRIGO VIEIRA";
        rodrigo.setor = "DESK";
        rodrigo.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        edilberto.em = 776;
        String em_edilberto = Integer.toString(edilberto.em);
        edilberto.nome = "EDILBERTO LIMA";
        edilberto.setor = "GARANTIA";
        edilberto.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        alexviana.em = 2511;
        String em_alexviana = Integer.toString(alexviana.em);
        alexviana.nome = "ALEX VIANA";
        alexviana.setor = "DESK";
        alexviana.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        henriqueestevao.em = 2924;
        String em_henriqueestevao = Integer.toString(henriqueestevao.em);
        henriqueestevao.nome = "HENRIQUE ESTEVÃO";
        henriqueestevao.setor = "DESK";
        henriqueestevao.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        joseairton.em = 1115;
        String em_joseairton = Integer.toString(joseairton.em);
        joseairton.nome = "AIRTON";
        joseairton.setor = "NOTEBOOK";
        joseairton.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        jeffersonratts.em = 1813;
        String em_jeffersonratts = Integer.toString(jeffersonratts.em);
        jeffersonratts.nome = "JEFFERSON RATTS";
        jeffersonratts.setor = "DESK";
        jeffersonratts.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        robertobarbosa.em = 27;
        String em_robertobarbosa = Integer.toString(robertobarbosa.em);
        robertobarbosa.nome = "ROBERTO BARBOSA";
        robertobarbosa.setor = "DESK";
        robertobarbosa.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        pedro.em = 2974;
        String em_pedro = Integer.toString(pedro.em);
        pedro.nome = "PEDRO JALES";
        pedro.setor = "NOTEBOOK";
        pedro.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        gilmarleysantos.em = 712;
        String em_gilmarleysantos = Integer.toString(gilmarleysantos.em);
        gilmarleysantos.nome = "GILMARLEY SANTOS";
        gilmarleysantos.setor = "GESTÃO";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        alandouglas.em = 917;
        String em_alandouglas = Integer.toString(alandouglas.em);
        alandouglas.nome = "ALAN DOUGLAS";
        alandouglas.setor = "DESK";
        alandouglas.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
        clovissantos.em = 2805;
        String em_clovissantos = Integer.toString(clovissantos.em);
        clovissantos.nome = "CLOVIS SANTOS";
        clovissantos.setor = "DESK";
        clovissantos.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
        joselima.em = 1760;
        String em_joselima = Integer.toString(joselima.em);
        joselima.nome = "JOSE LIMA";
        joselima.setor = "DESK";
        joselima.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
        williamsvictor.em = 175;
        String em_williamsvictor = Integer.toString(williamsvictor.em);
        williamsvictor.nome = "WILLIAMS VICTOR";
        williamsvictor.setor = "RMA";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        weslleyalves.em = 3033;
        String em_weslleyalves = Integer.toString(weslleyalves.em);
        weslleyalves.nome = "WESLLEY ALVES";
        weslleyalves.setor = "CHECK LIST";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        francideniocarlos.em = 241;
        String em_francideniocarlos = Integer.toString(francideniocarlos.em);
        francideniocarlos.nome = "FRANCIDENIO CARLOS";
        francideniocarlos.setor = "INSPEÇÃO";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////        
        randbrito.em = 2727;
        String em_randbrito = Integer.toString(randbrito.em);
        randbrito.nome = "RAND BRITO";
        randbrito.setor = "COTAÇÃO";
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////*ATENDENTES*//////////////////////////////////////////////        
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
        carol.em = 2764;
        String em_carol = Integer.toString(carol.em);
        carol.nome = "CAROL";
        carol.setor = "RECEPÇÃO";
        carol.porcentagem_dia_base = 0;
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
            
        if (TEXTO_EM.getText().equals(em_ismael))
             
        {
        indicador.eletronica = eletronica.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
	indicador.dia_base = eletronica.dia*data.dias_ate_dia_base;
        ismael.total_ol = Double.parseDouble(""+TEXTO_TOTAL_OL.getText());//RECEBE O VALOR DIGITADO
        indicador.media_diaria = ismael.total_ol/(indicador.eletronica/eletronica.dia);
        ismael.previsto = eletronica.dia*data.dias_uteis_totais; 
        indicador.porcentagem_total = (ismael.total_ol/indicador.eletronica)*100;
        indicador.porcentagem_falta = (ismael.total_ol/ismael.previsto)*100;//*****NEW*****
	ismael.diferenca_geral = ismael.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(ismael.setor);
        TEXTO_NOME.setText(ismael.nome); 
        TEXTO_EM.setText(em_ismael);
        TEXTO_PROJETADO.setText(""+Math.round(indicador.porcentagem_total));
        
        if (ismael.Metodo_Falta() > 0){
        TEXTO_FALTA.setText(""+ismael.Metodo_Falta()+"     ou     "+Math.round(100-indicador.porcentagem_falta)+"%");//*****NEW***** QUANDO FALTA !!!
        }
        else
        if (ismael.Metodo_Falta() < 0){
        TEXTO_FALTA.setBackground(Color.BLUE);
        FALTA_.setText("ACIMA");
        TEXTO_FALTA.setText(""+(ismael.Metodo_Falta())+"     ou     "+Math.round(100-indicador.porcentagem_falta)+"%");//*****NEW*****
        }
        else
        if (ismael.Metodo_Falta() == 0){//NA MÉDIA !!!
        TEXTO_FALTA.setBackground(Color.BLUE);
        FALTA_.setText("");
        TEXTO_FALTA.setText("100% DE APROVEITAMENTO !!!");//*****NEW*****
        }
        
        TEXTO_PREVISTO.setText(""+ismael.previsto);
        
        if (ismael.diferenca_geral < ismael.porcentagem_dia_base){
        TEXTO_DIFERENCA_GERAL.setText(""+Math.round(ismael.diferenca_geral - ismael.diferenca_geral - ismael.diferenca_geral)+"%");
        }
        
        TEXTO_DIA_BASE.setText(ismael.porcentagem_dia_base+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}//MUDA COR DO PROJETADO
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        if (ismael.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((ismael.porcentagem_dia_base < 100) && (ismael.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < eletronica.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        }
        
        else
        
        if (TEXTO_EM.getText().equals(em_carol))
             
        {
        indicador.recepcao = recepcao.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
	indicador.dia_base = recepcao.dia*data.dias_ate_dia_base;
        TOTALDEOL.setText("TOTAL DE OS");
        OLDODIA.setText("OS DO DIA");
        carol.total_ol = Double.parseDouble(""+TEXTO_TOTAL_OL.getText());//RECEBE O VALOR DIGITADO
        indicador.media_diaria = carol.total_ol/(indicador.recepcao/recepcao.dia);
        carol.previsto = recepcao.dia*data.dias_uteis_totais; 
	indicador.porcentagem_total = (carol.total_ol/indicador.recepcao)*100;
        indicador.porcentagem_falta = (carol.total_ol/carol.previsto)*100;//*****NEW*****
	carol.diferenca_geral = carol.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(carol.setor);
        TEXTO_NOME.setText(carol.nome); 
        TEXTO_EM.setText(em_carol);
        TEXTO_PROJETADO.setText(""+Math.round(indicador.porcentagem_total));
        
        if (carol.Metodo_Falta() > 0){
        TEXTO_FALTA.setText(""+carol.Metodo_Falta()+"     ou     "+Math.round(100-indicador.porcentagem_falta)+"%");//*****NEW***** QUANDO FALTA !!!
        }
        else
        if (carol.Metodo_Falta() < 0){
        TEXTO_FALTA.setBackground(Color.BLUE);
        FALTA_.setText("ACIMA");
        TEXTO_FALTA.setText(""+(carol.Metodo_Falta())+"     ou     "+Math.round(100-indicador.porcentagem_falta)+"%");//*****NEW*****
        }
        else
        if (carol.Metodo_Falta() == 0){//NA MÉDIA !!!
        TEXTO_FALTA.setBackground(Color.BLUE);
        FALTA_.setText("");
        TEXTO_FALTA.setText("100% DE APROVEITAMENTO !!!");//*****NEW*****
        }
        
        TEXTO_PREVISTO.setText(""+carol.previsto);
        
        if (carol.diferenca_geral < carol.porcentagem_dia_base){
        TEXTO_DIFERENCA_GERAL.setText(""+Math.round(carol.diferenca_geral - carol.diferenca_geral - carol.diferenca_geral)+"%");
        }
        
        TEXTO_DIA_BASE.setText(carol.porcentagem_dia_base+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}//MUDA COR DO PROJETADO
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        if (carol.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((carol.porcentagem_dia_base < 100) && (carol.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < recepcao.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        }    
        
        else
            
        if (TEXTO_EM.getText().equals(em_glauber))
        
        {
                indicador.eletronica = eletronica.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = eletronica.dia*data.dias_ate_dia_base;
                String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                glauber.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = glauber.total_ol/(indicador.eletronica/eletronica.dia);
		glauber.previsto = eletronica.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (glauber.total_ol/indicador.eletronica)*100;
		glauber.porcentagem_dia_base = glauber.porcentagem_dia_base;
                glauber.diferenca_geral = glauber.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(glauber.setor);
        TEXTO_NOME.setText(glauber.nome); 
        TEXTO_EM.setText(em_glauber);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = glauber.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(glauber.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(glauber.diferenca_geral-1));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(glauber.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < eletronica.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (glauber.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((glauber.porcentagem_dia_base < 100) && (glauber.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_paulo))
            
        /*{
            JOptionPane.showMessageDialog(null,"Colaborador de férias ...");
        }*/
        
        {
                indicador.eletronica = eletronica.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = eletronica.dia*data.dias_ate_dia_base;    
                String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                paulo.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = paulo.total_ol/(indicador.eletronica/eletronica.dia);
		paulo.previsto = eletronica.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (paulo.total_ol/indicador.eletronica)*100;
		paulo.diferenca_geral = paulo.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(paulo.setor);
        TEXTO_NOME.setText(paulo.nome); 
        TEXTO_EM.setText(em_paulo);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = paulo.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(paulo.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(paulo.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(paulo.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < eletronica.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (paulo.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((paulo.porcentagem_dia_base < 100) && (paulo.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_bruno))
        {
                indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;    
                String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                bruno.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = bruno.total_ol/(indicador.notebook/notebook.dia);
		bruno.previsto = notebook.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (bruno.total_ol/indicador.notebook)*100;
                bruno.porcentagem_dia_base = bruno.porcentagem_dia_base;
                bruno.diferenca_geral = bruno.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(bruno.setor);
        TEXTO_NOME.setText(bruno.nome); 
        TEXTO_EM.setText(em_bruno);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = bruno.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(bruno.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(bruno.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(Math.round(bruno.porcentagem_dia_base));
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < notebook.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (bruno.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((bruno.porcentagem_dia_base < 100) && (bruno.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_julio))
        {
                indicador.impressoras = impressoras.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = impressoras.dia*data.dias_ate_dia_base;    
                String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                julio.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = julio.total_ol/(indicador.impressoras/impressoras.dia);
		julio.previsto = impressoras.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (julio.total_ol/indicador.impressoras)*100;
                julio.diferenca_geral = julio.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(julio.setor);
        TEXTO_NOME.setText(julio.nome); 
        TEXTO_EM.setText(em_julio);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = julio.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(julio.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(julio.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(Math.round(julio.porcentagem_dia_base));
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < impressoras.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (julio.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((julio.porcentagem_dia_base < 100) && (julio.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_jociano))
        { 
            indicador.recarga = recarga.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = recarga.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                jociano.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = jociano.total_ol/(indicador.recarga/recarga.dia);
		jociano.previsto = recarga.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (jociano.total_ol/indicador.recarga)*100;
                jociano.diferenca_geral = jociano.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(jociano.setor);        
        TEXTO_NOME.setText(jociano.nome); 
        TEXTO_EM.setText(em_jociano);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = jociano.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(jociano.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(jociano.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(jociano.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < recarga.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (jociano.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((jociano.porcentagem_dia_base < 100) && (jociano.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_pedro))
        {
            indicador.garantia = garantia.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = garantia.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                pedro.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = pedro.total_ol/(indicador.notebook/notebook.dia);
		pedro.previsto = notebook.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (pedro.total_ol/indicador.notebook)*100;
                pedro.diferenca_geral = pedro.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(pedro.setor);
        TEXTO_NOME.setText(pedro.nome); 
        TEXTO_EM.setText(em_pedro);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = pedro.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(pedro.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(pedro.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(pedro.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < notebook.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (pedro.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((pedro.porcentagem_dia_base < 100) && (pedro.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
        
        if (TEXTO_EM.getText().equals(em_antonio))
        {
            indicador.tablet = tablet.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = tablet.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                antonio.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = antonio.total_ol/(indicador.tablet/tablet.dia);
		antonio.previsto = tablet.dia*data.dias_uteis_totais; 
		indicador.porcentagem_total = (antonio.total_ol/indicador.tablet)*100;
                antonio.diferenca_geral = antonio.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(antonio.setor);
        TEXTO_NOME.setText(antonio.nome); 
        TEXTO_EM.setText(em_antonio);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = antonio.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(antonio.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(antonio.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(antonio.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < tablet.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (antonio.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((antonio.porcentagem_dia_base < 100) && (antonio.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
        
        if (TEXTO_EM.getText().equals(em_benedito))
        {
            indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                benedito.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = benedito.total_ol/(indicador.desktop/desktop.dia);
		benedito.previsto = desktop.dia*data.dias_uteis_totais; 
		indicador.porcentagem_total = (benedito.total_ol/indicador.desktop)*100;
                benedito.diferenca_geral = benedito.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(benedito.setor);        
        TEXTO_NOME.setText(benedito.nome); 
        TEXTO_EM.setText(em_benedito);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = benedito.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(benedito.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(benedito.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(benedito.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (benedito.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((benedito.porcentagem_dia_base < 100) && (benedito.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }    
        
        else
            
        if (TEXTO_EM.getText().equals(em_emmanuel))
        /*{
            JOptionPane.showMessageDialog(null,"Colaborador de férias ...");
        }*/
        {
            indicador.garantia = garantia.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = garantia.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                emmanuel.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = emmanuel.total_ol/(indicador.garantia/garantia.dia);
		emmanuel.previsto = garantia.dia*data.dias_uteis_totais; 
		indicador.porcentagem_total = (emmanuel.total_ol/indicador.garantia)*100;
                emmanuel.diferenca_geral = emmanuel.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(emmanuel.setor);
        TEXTO_NOME.setText(emmanuel.nome); 
        TEXTO_EM.setText(em_emmanuel);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = emmanuel.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(emmanuel.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(emmanuel.diferenca_geral+1));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(emmanuel.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < garantia.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (emmanuel.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((emmanuel.porcentagem_dia_base < 100) && (emmanuel.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_robson))
        {
            indicador.laudo = laudo.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = laudo.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                robson.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = robson.total_ol/(indicador.laudo/laudo.dia);
		robson.previsto = laudo.dia*data.dias_uteis_totais; 
		indicador.porcentagem_total = (robson.total_ol/indicador.laudo)*100;
		robson.diferenca_geral = robson.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(robson.setor);
        TEXTO_NOME.setText(robson.nome); 
        TEXTO_EM.setText(em_robson);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = robson.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(robson.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(robson.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(""+Diferenca_geral);
        String DiaBase = Double.toString(robson.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (robson.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((robson.porcentagem_dia_base < 100) && (robson.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_lucas))
        {
            indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                lucas.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = lucas.total_ol/(indicador.desktop/desktop.dia);
		lucas.previsto = desktop.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (lucas.total_ol/indicador.desktop)*100;
                lucas.diferenca_geral = lucas.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(lucas.setor);
        TEXTO_NOME.setText(lucas.nome); 
        TEXTO_EM.setText(em_lucas);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = lucas.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(lucas.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(lucas.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(lucas.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (lucas.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((lucas.porcentagem_dia_base < 100) && (lucas.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
            
        if (TEXTO_EM.getText().equals(em_alexsandro))
        {
            indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;
                String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                alexsandro.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = alexsandro.total_ol/(indicador.desktop/desktop.dia);
		alexsandro.previsto = desktop.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (alexsandro.total_ol/indicador.desktop)*100;
                alexsandro.diferenca_geral = alexsandro.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(alexsandro.setor);
        TEXTO_NOME.setText(alexsandro.nome); 
        TEXTO_EM.setText(em_alexsandro);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = alexsandro.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(alexsandro.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(alexsandro.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(alexsandro.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (alexsandro.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((alexsandro.porcentagem_dia_base < 100) && (alexsandro.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
            
        else
            
        if (TEXTO_EM.getText().equals(em_rodrigo))
        {
            indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                rodrigo.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = rodrigo.total_ol/(indicador.desktop/desktop.dia);
		rodrigo.previsto = desktop.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (rodrigo.total_ol/indicador.desktop)*100;
                rodrigo.diferenca_geral = rodrigo.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(rodrigo.setor);
        TEXTO_NOME.setText(rodrigo.nome); 
        TEXTO_EM.setText(em_rodrigo);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = rodrigo.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(rodrigo.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(rodrigo.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(rodrigo.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (rodrigo.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((rodrigo.porcentagem_dia_base < 100) && (rodrigo.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
            
        else
            
        if (TEXTO_EM.getText().equals(em_alexviana))
        /*{
            JOptionPane.showMessageDialog(null,"Colaborador de férias ...");
        }*/
        
        { 
            indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                alexviana.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = alexviana.total_ol/(indicador.desktop/desktop.dia);
		alexviana.previsto = desktop.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (alexviana.total_ol/indicador.desktop)*100;
                alexviana.diferenca_geral = alexviana.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(alexviana.setor);
        TEXTO_NOME.setText(alexviana.nome); 
        TEXTO_EM.setText(em_alexviana);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = alexviana.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(alexviana.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(alexviana.diferenca_geral));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(alexviana.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (alexviana.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((alexviana.porcentagem_dia_base < 100) && (alexviana.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
            
        else
            
        if (TEXTO_EM.getText().equals(em_clovissantos))
        
        {
            indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                clovissantos.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = clovissantos.total_ol/(indicador.desktop/desktop.dia);
		clovissantos.previsto = desktop.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (clovissantos.total_ol/indicador.desktop)*100;
                clovissantos.diferenca_geral = clovissantos.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(clovissantos.setor);
        TEXTO_NOME.setText(clovissantos.nome); 
        TEXTO_EM.setText(em_clovissantos);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = clovissantos.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(clovissantos.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(clovissantos.diferenca_geral-1));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(clovissantos.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (clovissantos.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((clovissantos.porcentagem_dia_base < 100) && (clovissantos.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        
        else
        if (TEXTO_EM.getText().equals(em_joselima))
        {
            indicador.desktop = desktop.dia*data.dias_uteis;//MULTIPLICA O N° DE MAQUINAS A SEREM FEITAS POR DIA VEZES OS DIAS ÚTEIS PASSADOS ...
                indicador.dia_base = desktop.dia*data.dias_ate_dia_base;    
            String TOTAL_OL_STRING = TEXTO_TOTAL_OL.getText();
                joselima.total_ol = Double.parseDouble(TOTAL_OL_STRING);
                indicador.media_diaria = joselima.total_ol/(indicador.desktop/desktop.dia);
		joselima.previsto = desktop.dia*data.dias_uteis_totais;
		indicador.porcentagem_total = (joselima.total_ol/indicador.desktop)*100;
                joselima.diferenca_geral = joselima.porcentagem_dia_base - indicador.porcentagem_total;
        TEXTO_SETOR.setText(joselima.setor);
        TEXTO_NOME.setText(joselima.nome); 
        TEXTO_EM.setText(em_joselima);
        String Porcentagem_total = Double.toString(Math.round(indicador.porcentagem_total));
        TEXTO_PROJETADO.setText(Porcentagem_total);
        double Falta = joselima.Metodo_Falta();
        TEXTO_FALTA.setText(""+Falta);
        String Previsto = Double.toString(joselima.previsto);
        TEXTO_PREVISTO.setText(Previsto);
        String Diferenca_geral = Double.toString(Math.round(joselima.diferenca_geral+1));
        TEXTO_DIFERENCA_GERAL.setText(Diferenca_geral);
        String DiaBase = Double.toString(joselima.porcentagem_dia_base);
        TEXTO_DIA_BASE.setText(DiaBase+"%");
        if (indicador.porcentagem_total >= 100){TEXTO_PROJETADO.setBackground(Color.BLUE);}
        else
        if ((indicador.porcentagem_total < 100) && (indicador.porcentagem_total >= 80)){TEXTO_PROJETADO.setBackground(Color.YELLOW);}
        else{TEXTO_PROJETADO.setBackground(Color.RED); }
        
        DecimalFormat deci = new DecimalFormat("0.00");
        TEXTO_MEDIA_DIARIA.setText(""+deci.format(indicador.media_diaria));
        if (indicador.media_diaria < desktop.dia) {TEXTO_MEDIA_DIARIA.setBackground(Color.RED);}
        else {TEXTO_MEDIA_DIARIA.setBackground(Color.BLUE); }
        
        if (joselima.porcentagem_dia_base >= 100){TEXTO_DIA_BASE.setBackground(Color.BLUE);}//MUDA COR DO DIA BASE
        else
        if ((joselima.porcentagem_dia_base < 100) && (joselima.porcentagem_dia_base >= 80)){TEXTO_DIA_BASE.setBackground(Color.YELLOW);}
        else{TEXTO_DIA_BASE.setBackground(Color.RED); }
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Nenhum usuário gravado ou EM inválido ...","Aviso",JOptionPane.INFORMATION_MESSAGE);
        }
        
        indicador.porcentagem_dias_uteis = (data.dias_uteis/data.dias_uteis_totais)*100;//*****NEW*****
        
        Double dias_rest = (data.dias_uteis_totais-data.dias_uteis);
        
        indicador.porcentagem_dias_uteis_restantes = (dias_rest/data.dias_uteis_totais)*100;//*****NEW*****
        
        String DiasUteis = Double.toString(data.dias_uteis);
        TEXTO_DIAS_UTEIS.setText(DiasUteis+"     ou     "+Math.round(indicador.porcentagem_dias_uteis)+"%");
        
        String Dias_Uteis_restantes = Double.toString(data.dias_uteis_totais-data.dias_uteis);
        TEXTO_DIAS_UTEIS_RESTANTES.setText(Dias_Uteis_restantes+"     ou     "+Math.round(indicador.porcentagem_dias_uteis_restantes)+"%");
        }
        
    }//GEN-LAST:event_BOTAO_RESULTADOActionPerformed

    private void TEXTO_NOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_NOMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_NOMEActionPerformed

    private void TEXTO_FALTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_FALTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_FALTAActionPerformed

    private void TEXTO_PREVISTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_PREVISTOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_PREVISTOActionPerformed

    private void TEXTO_DIFERENCA_GERALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_DIFERENCA_GERALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_DIFERENCA_GERALActionPerformed

    private void TEXTO_DIAS_UTEISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_DIAS_UTEISActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_DIAS_UTEISActionPerformed

    private void TEXTO_DIA_BASEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_DIA_BASEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_DIA_BASEActionPerformed

    private void TEXTO_EMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_EMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_EMActionPerformed

    private void BOTAO_SAIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_SAIRActionPerformed
        // TODO add your handling code here:
        //application.exit();
        //System.exit(0);
        this.setVisible(false); 
//Runtime.getRuntime().exit(0);
    }//GEN-LAST:event_BOTAO_SAIRActionPerformed

    private void TEXTO_SETORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_SETORActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_SETORActionPerformed

    private void TEXTO_DIAS_UTEIS_RESTANTESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_DIAS_UTEIS_RESTANTESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_DIAS_UTEIS_RESTANTESActionPerformed

    private void BOTAO_SALVARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_SALVARActionPerformed
        
        String TotaDeOL;
        String Em;
        String Projetado;
        String OL_DO_DIA;
        
        int Q_A_OL = 0;
        int N_Q_OL = 0;
        
        TECNICO ismael = new TECNICO();
        TECNICO glauber = new TECNICO();
        TECNICO paulo = new TECNICO();
        TECNICO bruno = new TECNICO();
        TECNICO julio = new TECNICO();
        TECNICO jociano = new TECNICO();
        TECNICO pedro = new TECNICO();
        TECNICO antonio = new TECNICO();
        TECNICO benedito = new TECNICO();
        TECNICO emmanuel = new TECNICO();
        TECNICO polibio = new TECNICO();
        TECNICO robson = new TECNICO();
        TECNICO lucas = new TECNICO();
        TECNICO alexsandro = new TECNICO();
        TECNICO rodrigo = new TECNICO();
        TECNICO alexviana = new TECNICO();
        TECNICO henriqueestevao = new TECNICO();
        TECNICO robertobarbosa = new TECNICO();
        TECNICO alandouglas = new TECNICO();
        TECNICO clovissantos = new TECNICO();
        TECNICO joselima = new TECNICO();
        
        ATENDENTE carol = new ATENDENTE();
        
        ismael.em = 2228;
        String em_ismael = Integer.toString(ismael.em);
        glauber.em = 2378;
        String em_glauber = Integer.toString(glauber.em);
        paulo.em = 1152;
        String em_paulo = Integer.toString(paulo.em);
        bruno.em = 2940;
        String em_bruno = Integer.toString(bruno.em);
        julio.em = 1854;
        String em_julio = Integer.toString(julio.em);
        jociano.em = 983;
        String em_jociano = Integer.toString(jociano.em);
        antonio.em = 2732;
        String em_antonio = Integer.toString(antonio.em);
        benedito.em = 2127;
        String em_benedito = Integer.toString(benedito.em);
        emmanuel.em = 680;
        String em_emmanuel = Integer.toString(emmanuel.em);
        polibio.em = 1915;
        String em_polibio = Integer.toString(polibio.em);
        robson.em = 2283;
        String em_robson = Integer.toString(robson.em);
        lucas.em = 2742;
        String em_lucas = Integer.toString(lucas.em);
        alexsandro.em = 2964;
        String em_alexsandro = Integer.toString(alexsandro.em);
        rodrigo.em = 2942;
        String em_rodrigo = Integer.toString(rodrigo.em);
        alexviana.em = 2511;
        String em_alexviana = Integer.toString(alexviana.em);
        henriqueestevao.em = 2924;
        String em_henriqueestevao = Integer.toString(henriqueestevao.em);
        robertobarbosa.em = 27;
        String em_robertobarbosa = Integer.toString(robertobarbosa.em);
        pedro.em = 2974;
        String em_pedro = Integer.toString(pedro.em);
        alandouglas.em = 917;
        String em_alandouglas = Integer.toString(alandouglas.em);
        clovissantos.em = 2805;
        String em_clovissantos = Integer.toString(clovissantos.em);
        joselima.em = 1760;
        String em_joselima = Integer.toString(joselima.em);
        
        carol.em = 2764;
        String em_carol = Integer.toString(carol.em);
        
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        File DIRETORIO = new File("C:\\PRODUCAO");//PASTA QUE SERÁ ABERTA
        File ARQUIVO_OL = new File(DIRETORIO, "TECNICO.txt");//ARQUIVO QUE SERÁ ABERTO
        
        try {
            FileReader fileReader = new FileReader(ARQUIVO_OL);
            
            BufferedReader arq = new BufferedReader(fileReader);
            
             String  EM = arq.readLine();
             String  OL = arq.readLine();
             
             Q_A_OL = Integer.parseInt(OL);
             N_Q_OL = Integer.parseInt(TEXTO_TOTAL_OL.getText());
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        
        TotaDeOL = TEXTO_TOTAL_OL.getText();
        Em = TEXTO_EM.getText();
        Projetado = TEXTO_PROJETADO.getText();
        OL_DO_DIA = TEXTO_OL_DO_DIA.getText();
        
        ////////////////////////////////////////////////////////////////////////
        if ((TEXTO_EM.getText().equals("")))
        {
            JOptionPane.showMessageDialog(null,"Dados necessários em branco, por favor digite algo válido ...");
        }
        
        else
        if (N_Q_OL < Q_A_OL)
             {
                 
                 Object[] options = { "Sim", "Não" };   
                 int opcao = JOptionPane.showOptionDialog(null,"A quantidade de OL digitada é menor que a do registro atual"
                 +"\ntem certeza que quer alterar os dados ?","Tem certeza ?"
                 ,JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);   
  
  
                 if (opcao != 0)    
                 {
                    JOptionPane.showMessageDialog(null,"Você optou por não alterar as informações atuais.");
                 }   
              
                 if (opcao == 0)
                 {
                    
                    if (
            Em.equals(em_ismael) ||
            Em.equals(em_carol) ||
            Em.equals(em_glauber) ||
            Em.equals(em_paulo) ||
            Em.equals(em_bruno) ||
            Em.equals(em_julio) ||
            Em.equals(em_jociano) ||
            Em.equals(em_paulo) ||
            Em.equals(em_antonio) ||
            Em.equals(em_benedito) ||
            Em.equals(em_emmanuel) ||
            Em.equals(em_polibio) ||
            Em.equals(em_robson) ||
            Em.equals(em_lucas) ||
            Em.equals(em_alexsandro) ||
            Em.equals(em_rodrigo) ||
            Em.equals(em_alexviana) ||
            Em.equals(em_henriqueestevao) ||
            Em.equals(em_robertobarbosa) ||
            Em.equals(em_pedro) ||
            Em.equals(em_alandouglas) ||
            Em.equals(em_clovissantos) ||
            Em.equals(em_joselima)
           )
                
        {
        
        FileWriter TECNICO = null;
        
        
        try {
            TECNICO = new FileWriter("c:\\PRODUCAO\\TECNICO.txt");
            
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PrintWriter gravarArq = new PrintWriter(TECNICO);
        
        {
              gravarArq.println(Em);
              gravarArq.println(TotaDeOL);
              gravarArq.println(Projetado);
              gravarArq.println(OL_DO_DIA);
        }
        try { 
            TECNICO.close();

        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null," EM: "+Em+
                                "\n TOTAL DE OL: "+TotaDeOL+
                                   "\n PROJEÇÃO: "+Projetado+"%"+
                                   "\n OL DO DIA: "+OL_DO_DIA+
                                "\n\n Informações Salvas com Sucesso.","Aviso",JOptionPane.INFORMATION_MESSAGE);
        }
                 }
                 
        }
        else
        if (N_Q_OL >= Q_A_OL)
            
        {
        
        if (
            Em.equals(em_ismael) ||
            Em.equals(em_carol) ||
            Em.equals(em_glauber) ||
            Em.equals(em_paulo) ||
            Em.equals(em_bruno) ||
            Em.equals(em_julio) ||
            Em.equals(em_jociano) ||
            Em.equals(em_paulo) ||
            Em.equals(em_antonio) ||
            Em.equals(em_benedito) ||
            Em.equals(em_emmanuel) ||
            Em.equals(em_polibio) ||
            Em.equals(em_robson) ||
            Em.equals(em_lucas) ||
            Em.equals(em_alexsandro) ||
            Em.equals(em_rodrigo) ||
            Em.equals(em_alexviana) ||
            Em.equals(em_henriqueestevao) ||
            Em.equals(em_robertobarbosa) ||
            Em.equals(em_pedro) ||
            Em.equals(em_alandouglas) ||
            Em.equals(em_clovissantos) ||
            Em.equals(em_joselima)
           )
                
        {
        
        FileWriter TECNICO = null;
        
        
        try {
            TECNICO = new FileWriter("c:\\PRODUCAO\\TECNICO.txt");
            
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PrintWriter gravarArq = new PrintWriter(TECNICO);
        
        {
              gravarArq.println(Em);
              gravarArq.println(TotaDeOL);
              gravarArq.println(Projetado);
              gravarArq.println(OL_DO_DIA);
        }
        try { 
            TECNICO.close();

        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null," EM: "+Em+
                                "\n TOTAL DE OL: "+TotaDeOL+
                                   "\n PROJEÇÃO: "+Projetado+"%"+
                                   "\n OL DO DIA: "+OL_DO_DIA+
                                "\n\n Informações Salvas com Sucesso.","Aviso",JOptionPane.INFORMATION_MESSAGE);
        }
        
        }
        else
        
        if (
            Em.equals(em_ismael) ||
            Em.equals(em_carol) ||
            Em.equals(em_glauber) ||
            Em.equals(em_paulo) ||
            Em.equals(em_bruno) ||
            Em.equals(em_julio) ||
            Em.equals(em_jociano) ||
            Em.equals(em_paulo) ||
            Em.equals(em_antonio) ||
            Em.equals(em_benedito) ||
            Em.equals(em_emmanuel) ||
            Em.equals(em_polibio) ||
            Em.equals(em_robson) ||
            Em.equals(em_lucas) ||
            Em.equals(em_alexsandro) ||
            Em.equals(em_rodrigo) ||
            Em.equals(em_alexviana) ||
            Em.equals(em_henriqueestevao) ||
            Em.equals(em_robertobarbosa) ||
            Em.equals(em_pedro) ||
            Em.equals(em_alandouglas) ||
            Em.equals(em_clovissantos) ||
            Em.equals(em_joselima)
            )
                
        {
        
        FileWriter TECNICO = null;
        
        
        try {
            TECNICO = new FileWriter("c:\\PRODUCAO\\TECNICO.txt");
            
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PrintWriter gravarArq = new PrintWriter(TECNICO);
        
        {
              gravarArq.println(Em);
              gravarArq.println(TotaDeOL);
              gravarArq.println(Projetado);
              gravarArq.println(OL_DO_DIA);
        }
        try { 
            TECNICO.close();

        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null," EM: "+Em+
                                "\n TOTAL DE OL: "+TotaDeOL+
                                   "\n PROJEÇÃO: "+Projetado+"%"+
                                   "\n OL DO DIA: "+OL_DO_DIA+
                                "\n\n Informações Salvas com Sucesso.","Aviso",JOptionPane.INFORMATION_MESSAGE);
        }
        
        else
        
        {
            JOptionPane.showMessageDialog(null,"Digite um EM válido ...");
        }
        
    }//GEN-LAST:event_BOTAO_SALVARActionPerformed

    private void BOTAO_ATUALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_ATUALActionPerformed
        // TODO add your handling code here:
        File DIRETORIO = new File("C:\\PRODUCAO");
        File ARQUIVO_OL = new File(DIRETORIO, "TECNICO.txt");
        
        try {
            FileReader fileReader = new FileReader(ARQUIVO_OL);
            
            BufferedReader arq = new BufferedReader(fileReader);
            
             String  EM = arq.readLine();
             String  OL = arq.readLine();
             String  PROJETADO = arq.readLine();
             
             JOptionPane.showMessageDialog(null," EM CADASTRADO: "+EM+
                                "\n TOTAL DE OL: "+OL+
                                   "\n PROJEÇÃO ATUAL: "+PROJETADO+"%"+
                                "\n\n","Informações Atuais",JOptionPane.INFORMATION_MESSAGE);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BOTAO_ATUALActionPerformed

    private void OPCAO_PRODUCAO_ATUALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPCAO_PRODUCAO_ATUALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OPCAO_PRODUCAO_ATUALActionPerformed

    private void BOTAO_OL_DO_DIAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_OL_DO_DIAActionPerformed
        // TODO add your handling code here:
        File DIRETORIO = new File("C:\\PRODUCAO");
        File ARQUIVO_OL = new File(DIRETORIO, "TECNICO.txt");
        
        try {
            FileReader fileReader = new FileReader(ARQUIVO_OL);
            
            BufferedReader arq = new BufferedReader(fileReader);
            
             String  EM = arq.readLine();
             String  OL = arq.readLine();
             String  PROJETADO = arq.readLine();
             String OL_DO_DIA = arq.readLine();
             
             JOptionPane.showMessageDialog(null," OL DO DIA: "+OL_DO_DIA,"Informações Atuais",JOptionPane.INFORMATION_MESSAGE);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BOTAO_OL_DO_DIAActionPerformed

    private void BOTAO_LIMPARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_LIMPARActionPerformed
        // TODO add your handling code here:
        TOTALDEOL.setText("TOTAL DE OL");
        OLDODIA.setText("OL DO DIA");
        FALTA_.setText("FALTA");
        TEXTO_SETOR.setText("");
        TEXTO_NOME.setText(""); 
        TEXTO_EM.setText("");
        TEXTO_PROJETADO.setText("");
        TEXTO_MEDIA_DIARIA.setText("");
        TEXTO_FALTA.setText("");
        TEXTO_PREVISTO.setText("");
        TEXTO_DIFERENCA_GERAL.setText("");
        TEXTO_DIA_BASE.setText("");
        TEXTO_TOTAL_OL.setText("");
        TEXTO_DIAS_UTEIS.setText("");
        TEXTO_DIAS_UTEIS_RESTANTES.setText("");
        TEXTO_OL_DO_DIA.setText("");
        TEXTO_DIFERENCA_DIARIA.setText("");
        TEXTO_PROJETADO.setBackground(Color.WHITE);
        TEXTO_MEDIA_DIARIA.setBackground(Color.WHITE);
        TEXTO_DIA_BASE.setBackground(Color.WHITE);
        TEXTO_FALTA.setBackground(Color.WHITE);
        //COMBO_DIA.setSelectedIndex(0);//DEFINE PARA O PRIMEIRO VALOR
        OPCAO_PRODUCAO_ATUAL.setSelected(isIcon);//DESMARCA
        OPCAO_DEFINIR_DIA.setSelected(isIcon);//DESMARCA
        COMBO_DIA.setEnabled(false);//DESATIVA DEFINIR DATA
    }//GEN-LAST:event_BOTAO_LIMPARActionPerformed

    private void TEXTO_MEDIA_DIARIAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TEXTO_MEDIA_DIARIAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TEXTO_MEDIA_DIARIAActionPerformed

    private void BOTAO_PADRAOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_PADRAOActionPerformed
        // TODO add your handling code here:
        Object[] options = { "Sim", "Não" };   
                 int opcao = JOptionPane.showOptionDialog(null,"Esta opção só deve ser usada no primeiro uso do aplicativo "
                 +"\nou para zerar os dados tem certeza que deseja continuar ?","Atenção"
                 ,JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);   
  
  
                 if (opcao != 0)    
                 {
                    JOptionPane.showMessageDialog(null,"Você optou por não alterar as informações atuais.");
                 }   
              
                 if (opcao == 0)
                 {
        
        FileWriter TECNICO = null;
        
        
        try {
            TECNICO = new FileWriter("c:\\PRODUCAO\\TECNICO.txt");
            
        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PrintWriter gravarArq = new PrintWriter(TECNICO);
        
        {
              gravarArq.println("0000");
              gravarArq.println("0");
        }
        try { 
            TECNICO.close();

        } catch (IOException ex) {
            Logger.getLogger(MENU_PRODUCAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null,"As configurações padrões do aplicativo foram gravadas com sucesso.","Aviso",JOptionPane.INFORMATION_MESSAGE);
                 }
    }//GEN-LAST:event_BOTAO_PADRAOActionPerformed

    private void OPCAO_DEFINIR_DIAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPCAO_DEFINIR_DIAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OPCAO_DEFINIR_DIAActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        
        KeyboardFocusManager.getCurrentKeyboardFocusManager()
            .addKeyEventDispatcher(new KeyEventDispatcher() {
                @Override
                public boolean dispatchKeyEvent(KeyEvent event) {
                    if(event.getID() == KeyEvent.KEY_RELEASED 
                       && event.getKeyCode() == KeyEvent.VK_ENTER){
                           BOTAO_RESULTADOActionPerformed(null);
                           return true;
                     }
                     return false;
                }
        }); 
        
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
        
        DATA data = new DATA();
        
        COMBO_DIA.setEnabled(false);
        COMBO_DIA.setSelectedIndex(data.dia-1);//DIA 28 DEU ERRO AO ESTAR ATIVADO NO CÓDIGO ... O MOTIVO FOI NÃO HAVER TODOS OS DIAS DE 0 A 31 ...
    }//GEN-LAST:event_formInternalFrameOpened

    private void BOTAO_RESULTADOKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BOTAO_RESULTADOKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BOTAO_RESULTADOKeyPressed

    private void BOTAO_RESULTADOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BOTAO_RESULTADOKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_BOTAO_RESULTADOKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BOTAO_ATUAL;
    private javax.swing.JButton BOTAO_LIMPAR;
    private javax.swing.JButton BOTAO_OL_DO_DIA;
    private javax.swing.JButton BOTAO_PADRAO;
    public javax.swing.JButton BOTAO_RESULTADO;
    private javax.swing.JButton BOTAO_SAIR;
    private javax.swing.JButton BOTAO_SALVAR;
    private javax.swing.JComboBox COMBO_DIA;
    private javax.swing.JLabel DIABASE_;
    private javax.swing.JLabel DIASUTEIS;
    private javax.swing.JLabel DIASUTEIS1;
    private javax.swing.JLabel DIFERENCAGERAL;
    private javax.swing.JLabel EM_;
    private javax.swing.JLabel FALTA_;
    private javax.swing.JLabel MEDIA_DIARIA_;
    private javax.swing.JLabel NOME_;
    private javax.swing.JLabel OLDODIA;
    private javax.swing.JCheckBox OPCAO_DEFINIR_DIA;
    private javax.swing.JCheckBox OPCAO_PRODUCAO_ATUAL;
    private javax.swing.JLabel PREVISTO_;
    private javax.swing.JLabel PROJETADO_;
    private javax.swing.JLabel SETOR_;
    public javax.swing.JTextField TEXTO_DIAS_UTEIS;
    public javax.swing.JTextField TEXTO_DIAS_UTEIS_RESTANTES;
    public javax.swing.JTextField TEXTO_DIA_BASE;
    public javax.swing.JTextField TEXTO_DIFERENCA_DIARIA;
    public javax.swing.JTextField TEXTO_DIFERENCA_GERAL;
    public javax.swing.JTextField TEXTO_EM;
    public javax.swing.JTextField TEXTO_FALTA;
    public javax.swing.JTextField TEXTO_MEDIA_DIARIA;
    public javax.swing.JTextField TEXTO_NOME;
    public javax.swing.JTextField TEXTO_OL_DO_DIA;
    public javax.swing.JTextField TEXTO_PREVISTO;
    public javax.swing.JTextField TEXTO_PROJETADO;
    public javax.swing.JTextField TEXTO_SETOR;
    public javax.swing.JTextField TEXTO_TOTAL_OL;
    private javax.swing.JLabel TOTALDEOL;
    private javax.swing.JLabel TOTALDEOL2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}