/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import java.applet.Applet;
import java.applet.AudioClip;
import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ismael Ribeiro
 */
public class MENU_PONTO extends javax.swing.JInternalFrame {
    
    public void play(String nomeDoAudio){
        
        URL url = getClass().getResource(nomeDoAudio+".wav");//wav
        AudioClip audio = Applet.newAudioClip(url);
        audio.play();
        //audio.loop();
}
    
    public void stop(String nomeDoAudio){
        
        URL url = getClass().getResource(nomeDoAudio+".wav");//wav
        AudioClip audio = Applet.newAudioClip(url);
        //audio.play();
        audio.stop();
}

    /**
     * Creates new form MENU_PONTO
     */
    public MENU_PONTO() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        COMBO_HORA = new javax.swing.JComboBox();
        BOTAO_SALVAR = new javax.swing.JButton();
        COMBO_DIA = new javax.swing.JComboBox();
        COMBO_MES = new javax.swing.JComboBox();
        COMBO_ANO = new javax.swing.JComboBox();
        COMBO_MINUTO = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BOTAO_ALTERNADOR = new javax.swing.JToggleButton();
        BOTAO_SAIR = new javax.swing.JButton();
        BOTAO_LOCALIZAR = new javax.swing.JButton();
        BOTAO_ATRASOS = new javax.swing.JButton();

        setClosable(true);
        setTitle("Registro de Ponto");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        COMBO_HORA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        COMBO_HORA.setToolTipText("Horas");

        BOTAO_SALVAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/disquete.jpg"))); // NOI18N
        BOTAO_SALVAR.setToolTipText("Salvar");
        BOTAO_SALVAR.setBorder(null);
        BOTAO_SALVAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_SALVARActionPerformed(evt);
            }
        });

        COMBO_DIA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        COMBO_DIA.setToolTipText("Dia");

        COMBO_MES.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        COMBO_MES.setToolTipText("Mês");

        COMBO_ANO.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2016" }));
        COMBO_ANO.setToolTipText("Ano");

        COMBO_MINUTO.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        COMBO_MINUTO.setToolTipText("Minutos");

        jLabel1.setText("HORA");

        jLabel2.setText("DATA");

        BOTAO_ALTERNADOR.setText("Entrada ou Saida ?");
        BOTAO_ALTERNADOR.setToolTipText("Selecione se o horário a ser procurado é entrada ou saída.");
        BOTAO_ALTERNADOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_ALTERNADORActionPerformed(evt);
            }
        });

        BOTAO_SAIR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icone_sair.png"))); // NOI18N
        BOTAO_SAIR.setToolTipText("Sair");
        BOTAO_SAIR.setBorder(null);
        BOTAO_SAIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_SAIRActionPerformed(evt);
            }
        });

        BOTAO_LOCALIZAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icon-lupa.jpg"))); // NOI18N
        BOTAO_LOCALIZAR.setToolTipText("Localizar");
        BOTAO_LOCALIZAR.setBorder(null);
        BOTAO_LOCALIZAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_LOCALIZARActionPerformed(evt);
            }
        });

        BOTAO_ATRASOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interfaces/IMAGENS/icon-nuclear.png"))); // NOI18N
        BOTAO_ATRASOS.setToolTipText("Atrasos");
        BOTAO_ATRASOS.setBorder(null);
        BOTAO_ATRASOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BOTAO_ATRASOSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BOTAO_ALTERNADOR)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(COMBO_DIA, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(COMBO_MES, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(COMBO_ANO, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(COMBO_HORA, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(COMBO_MINUTO, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(BOTAO_SALVAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BOTAO_SAIR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BOTAO_LOCALIZAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BOTAO_ATRASOS)))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(COMBO_HORA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(COMBO_MINUTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(COMBO_DIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(COMBO_MES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(COMBO_ANO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BOTAO_ALTERNADOR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BOTAO_SALVAR)
                            .addComponent(BOTAO_SAIR))
                        .addComponent(BOTAO_LOCALIZAR, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(BOTAO_ATRASOS))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);//DEFINE A JANELA INTERNA CENTRALIZADA
        
        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat dia = new SimpleDateFormat("dd");
        SimpleDateFormat mes = new SimpleDateFormat("MM");
        SimpleDateFormat ano = new SimpleDateFormat("yyyy");
        int dia_int = Integer.parseInt(dia.format(dataSistema));
        int mes_int = Integer.parseInt(mes.format(dataSistema));
        int ano_int = Integer.parseInt(ano.format(dataSistema));
        
        if(dia_int==1){//INICIO DEFINICOES DO DIA
            COMBO_DIA.setSelectedIndex(dia_int);
        }
        else
        if(dia_int>1){
            COMBO_DIA.setSelectedIndex(dia_int-1);
        }//FIM DEFINICOES DO DIA
        if(ano_int==2016){//INICIO DEFINICOES DO ANO
            COMBO_ANO.setSelectedIndex(0);
        }//FIM DEFINICOES DO ANO
        
        if(mes_int>1){//INICIO DEFEINICOES DO MES
            COMBO_MES.setSelectedIndex(mes_int-1);
        }
        else
        if(mes_int==1){
            COMBO_MES.setSelectedIndex(mes_int);
        }//FIM DEFINICOES DO MES
        
        Calendar now = Calendar.getInstance();

        int segundo = Integer.parseInt((String.format("%1$tS", now)));
        int minuto = Integer.parseInt((String.format("%1$tM", now)));
        int hora = Integer.parseInt((String.format("%1$tH", now)));
        
        COMBO_HORA.setSelectedIndex(hora);//DEFINE A COMBO HORA DE ACORDO COM A HORA DO WINDOWS
        COMBO_MINUTO.setSelectedIndex(minuto);
        
        BOTAO_ALTERNADOR.setBackground(Color.YELLOW);
        BOTAO_ALTERNADOR.setText("Entrada ou Saida ?");
            
    }//GEN-LAST:event_formInternalFrameOpened

    private void BOTAO_SALVARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_SALVARActionPerformed
        // TODO add your handling code here:
        HORARIO horario = new HORARIO();
        
        java.io.File DIRETORIO_DO_PONTO = new java.io.File(TELA_PRINCIPAL.letra+":\\PRODUCAO\\PONTO");
        DIRETORIO_DO_PONTO.mkdir();
        
        int hora = 0;
        int minuto = 0;
        int horacerta = horario.horacerta;//DEVE RECEBER A HORA CERTA DE CHEGADA
        int hora_de_chegada = 0;
        
        hora = Integer.parseInt((String) COMBO_HORA.getSelectedItem());
        minuto = Integer.parseInt((String) COMBO_MINUTO.getSelectedItem());
        
        hora_de_chegada = hora;
        
        java.io.File DATA_DA_PASTA = new java.io.File(TELA_PRINCIPAL.letra+":\\PRODUCAO\\PONTO\\"
                +COMBO_DIA.getSelectedItem()+"-"
                +COMBO_MES.getSelectedItem()+"-"
                +COMBO_ANO.getSelectedItem());//CRIA A PASTA COM A DATA DEFINIDA NOS COMBOS
        DATA_DA_PASTA.mkdir();
        
        String HORARIO = "";
        
        int hora_definida = Integer.parseInt(""+COMBO_HORA.getSelectedItem());
        
        if(hora_definida < 16){
            HORARIO = "Entrada";
        }
        else
        {
            HORARIO = "Saida";
        }
        
        String Entrada_ou_Saida = HORARIO;
        
        horario.horario(hora, minuto, hora_de_chegada, horacerta,Entrada_ou_Saida);//METODO DA CLASSE HORARIO
        
        HORARIO += ".txt";
        
        java.io.File Horario = new java.io.File(DATA_DA_PASTA,HORARIO);//CRIA O ARQUIVO ENTRADA OU SAIDA
        
        try {
            Horario.createNewFile();
        } catch (IOException ex) {
            Logger.getLogger(MENU_PONTO.class.getName()).log(Level.SEVERE, null, ex);
        }
        ////////////////////////////////////////
        ////////////////////////////////////////
        ////////////////////////////////////////
        ////////////////////////////////////////
        
        FileWriter Hora = null;
        
        try {
            Hora = new FileWriter(Horario);
        } catch (IOException ex) {
            Logger.getLogger(MENU_PONTO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        PrintWriter gravarArq = new PrintWriter(Hora);
        {
              gravarArq.println(""+COMBO_HORA.getSelectedItem());
              gravarArq.println(""+COMBO_MINUTO.getSelectedItem());
        }
        
        try {
            Hora.close();
        } catch (IOException ex) {
            Logger.getLogger(MENU_PONTO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(null,"Ponto registrado com sucesso.","Aviso",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_BOTAO_SALVARActionPerformed

    private void BOTAO_SAIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_SAIRActionPerformed
        // TODO add your handling code here:
        //System.exit(0);//ENCERRA TOTALMENTE O PROGRAMA
        this.setVisible(false);
    }//GEN-LAST:event_BOTAO_SAIRActionPerformed

    private void BOTAO_LOCALIZARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_LOCALIZARActionPerformed
        // TODO add your handling code here:
        HORARIO horario = new HORARIO();//Objeto da Classe HORARIO
        
        int horacerta = horario.horacerta;//Recebe a hora certa de chegada instanciada na classe HORARIO
        int hora_de_chegada = 0;//Recebe a hora lida no arquivo txt
        
        
        
        String HORARIO = "";
        
        if(BOTAO_ALTERNADOR.isSelected()){
            HORARIO = "Entrada";//Define o nome do arquivo dependendo da seleção Entrada ou Saida
        }
        else
        if(!BOTAO_ALTERNADOR.isSelected()){
            HORARIO = "Saida";//Define o nome do arquivo dependendo da seleção Entrada ou Saida
        }
        
        HORARIO += ".txt";//Recebe a extenção .txt
        
        String DATA_DA_PASTA = ""+COMBO_DIA.getSelectedItem()+"-"+
                                  COMBO_MES.getSelectedItem()+"-"+
                                  COMBO_ANO.getSelectedItem();
        
        File ARQUIVO = new File(TELA_PRINCIPAL.letra+":\\PRODUCAO\\PONTO\\"+DATA_DA_PASTA+"\\"+HORARIO);
        
        String Verifica_Selecao = BOTAO_ALTERNADOR.getText();//Verifica se o botão de seleção está em entrada ou saida.
        
        try {
            
            FileReader fileReader = new FileReader(ARQUIVO);
            
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            
            String HORA = bufferedReader.readLine();//HORA
            String MINUTO = bufferedReader.readLine();//MINUTO
            
            int HORA_INT = Integer.parseInt(HORA);
            int MINUTO_INT = Integer.parseInt(MINUTO);
            
            hora_de_chegada = HORA_INT;
            
            if(Verifica_Selecao.equals("Entrada ou Saida ?")){
                JOptionPane.showMessageDialog(null,"Selecione uma opção."
                    ,"Aviso",JOptionPane.ERROR_MESSAGE);//É CHAMADO SE NENHUMA DAS OPÇÕES ENTRADA OU SAIDA FOR SELECIONADA
            }
            else
            if(Verifica_Selecao.equals("Entrada")){
             JOptionPane.showMessageDialog(null,"Você chegou às "+HORA+":"+MINUTO,"Registro de Horário dia "+
                     COMBO_DIA.getSelectedItem()+"-"+
                     COMBO_MES.getSelectedItem()+"-"+
                     COMBO_ANO.getSelectedItem(),JOptionPane.INFORMATION_MESSAGE);   
             horario.horario(HORA_INT, MINUTO_INT, hora_de_chegada, horacerta, Verifica_Selecao);
            }
            else
            if(Verifica_Selecao.equals("Saida")){
             JOptionPane.showMessageDialog(null,"Você saiu às "+HORA+":"+MINUTO,"Registro de Horário dia "+
                     COMBO_DIA.getSelectedItem()+"-"+
                     COMBO_MES.getSelectedItem()+"-"+
                     COMBO_ANO.getSelectedItem(),JOptionPane.INFORMATION_MESSAGE);   
             horario.horario(HORA_INT, MINUTO_INT, hora_de_chegada, horacerta, Verifica_Selecao);
            }
            
        } catch (IOException ex) {
            Logger.getLogger(MENU_PONTO.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Horário não encontrado.","Aviso",JOptionPane.ERROR_MESSAGE);
            //Mostra esse aviso caso o arquivo não exista ou não seja encontrada ...
        }
        
    }//GEN-LAST:event_BOTAO_LOCALIZARActionPerformed

    private void BOTAO_ATRASOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_ATRASOSActionPerformed
        // TODO add your handling code here:
        
        play("/Interfaces/SONS/animacao1");//executa o arquivo wav
        
        JOptionPane.showMessageDialog(null,
                "Esta parte do programa está sendo construida.",
                "Algoritmo em Construção",JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_BOTAO_ATRASOSActionPerformed

    private void BOTAO_ALTERNADORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BOTAO_ALTERNADORActionPerformed
        // TODO add your handling code here:
        if(BOTAO_ALTERNADOR.isSelected()){
            BOTAO_ALTERNADOR.setBackground(Color.GREEN);
            BOTAO_ALTERNADOR.setText("Entrada");
        }
        else
        if(!BOTAO_ALTERNADOR.isSelected()){
            BOTAO_ALTERNADOR.setBackground(Color.RED);
            BOTAO_ALTERNADOR.setText("Saida");
        }
    }//GEN-LAST:event_BOTAO_ALTERNADORActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BOTAO_ALTERNADOR;
    private javax.swing.JButton BOTAO_ATRASOS;
    private javax.swing.JButton BOTAO_LOCALIZAR;
    private javax.swing.JButton BOTAO_SAIR;
    private javax.swing.JButton BOTAO_SALVAR;
    private javax.swing.JComboBox COMBO_ANO;
    private javax.swing.JComboBox COMBO_DIA;
    private javax.swing.JComboBox COMBO_HORA;
    private javax.swing.JComboBox COMBO_MES;
    private javax.swing.JComboBox COMBO_MINUTO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}